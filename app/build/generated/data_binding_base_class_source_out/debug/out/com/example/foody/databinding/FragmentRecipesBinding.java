// Generated by data binding compiler. Do not edit!
package com.example.foody.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.foody.R;
import com.example.foody.viewmodels.MainViewModel;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.todkars.shimmer.ShimmerRecyclerView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentRecipesBinding extends ViewDataBinding {
  @NonNull
  public final ImageView errorImageView;

  @NonNull
  public final TextView errorTextView;

  @NonNull
  public final FloatingActionButton recipesFab;

  @NonNull
  public final ShimmerRecyclerView recyclerview;

  @Bindable
  protected MainViewModel mMainViewModel;

  protected FragmentRecipesBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView errorImageView, TextView errorTextView, FloatingActionButton recipesFab,
      ShimmerRecyclerView recyclerview) {
    super(_bindingComponent, _root, _localFieldCount);
    this.errorImageView = errorImageView;
    this.errorTextView = errorTextView;
    this.recipesFab = recipesFab;
    this.recyclerview = recyclerview;
  }

  public abstract void setMainViewModel(@Nullable MainViewModel mainViewModel);

  @Nullable
  public MainViewModel getMainViewModel() {
    return mMainViewModel;
  }

  @NonNull
  public static FragmentRecipesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_recipes, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRecipesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentRecipesBinding>inflateInternal(inflater, R.layout.fragment_recipes, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentRecipesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_recipes, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRecipesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentRecipesBinding>inflateInternal(inflater, R.layout.fragment_recipes, null, false, component);
  }

  public static FragmentRecipesBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentRecipesBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentRecipesBinding)bind(component, view, R.layout.fragment_recipes);
  }
}
